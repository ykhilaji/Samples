---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by grifon.
--- DateTime: 16/11/2018 00:56
---

logger = require('log')
queue = require('queue')
fiber = require('fiber')

box.cfg {
    wal_mode = 'none',
    checkpoint_interval = 0,
    log_level = 5
}

local function on_task_change(task, status)
    logger.info('Task was changed')
    logger.info(task)
    logger.info(status)
end

queue.create_tube('tasks', 'fifo', { temporary = true, if_not_exists = true, on_task_change = on_task_change })

local function process()
    local function helper(task)
        logger.info('Start to processing task')
        fiber.sleep(5)
        logger.info('Finish processing task ' .. task[1])
    end

    while true do
        logger.info('Trying to get new task . . .')
        local task = queue.tube.tasks:take(1)
        if task ~= nil then
            logger.info('Get new task')
            logger.info(task)
            if pcall(function() helper(task) end) then
                logger.info('Task successfully proceeded')
                if pcall(function() queue.tube.tasks:ack(task[1]) end) then
                    logger.info('Task was acknowledged')
                else
                    logger.error('Some error happened. Remove task')
                    if not pcall(function() queue.tube.tasks:bury(task[1]) end) then
                        logger.error('Error')
                    end
                end
            else
                logger.error('Some error happened. Remove task')
                if not pcall(function() queue.tube.tasks:bury(task[1]) end) then
                    logger.error('Error')
                end
            end
            fiber.yield()
        end
    end
end

queue_processor = fiber.create(process)

local function put(req)
    local json = req:json()
    logger.info('Add new task')
    local task = queue.tube.tasks:put(json)
    logger.info(task)
    return req:render({ json = task })
end

http = require('http.server').new('localhost', 8080)

http:route({ path = '/api/enqueue', method = 'PUT' }, put)

http:start()